[{"name":"app.R","content":"library(shiny)\nvars <- setdiff(names(iris), \"Species\")\n\nui <- pageWithSidebar(\n  # k-means only works with numerical variables,\n  # so don't give the user the option to select\n  # a categorical variable\n  \n  \n  headerPanel('Iris k-means clustering'),\n  sidebarPanel(\n    selectInput('xcol', 'X Variable', vars),\n    selectInput('ycol', 'Y Variable', vars, selected = vars[[2]]),\n    numericInput('clusters', 'Cluster count', 3, min = 1, max = 9)\n  ),\n  mainPanel(\n    plotOutput('plot1')\n  )\n)\n\n\nserver <- function(input, output, session) {\n  # Combine the selected variables into a new data frame\n  selectedData <- reactive({\n    iris[, c(input$xcol, input$ycol)]\n  })\n  \n  clusters <- reactive({\n    kmeans(selectedData(), input$clusters)\n  })\n  \n  output$plot1 <- renderPlot({\n    palette(c(\"#E41A1C\", \"#377EB8\", \"#4DAF4A\", \"#984EA3\",\n              \"#FF7F00\", \"#FFFF33\", \"#A65628\", \"#F781BF\", \"#999999\"))\n    \n    par(mar = c(5.1, 4.1, 0, 1))\n    plot(selectedData(),\n         col = clusters()$cluster,\n         pch = 20, cex = 3)\n    points(clusters()$centers, pch = 4, cex = 4, lwd = 4)\n  })\n}\n\nshinyApp(ui, server)","type":"text"}]
